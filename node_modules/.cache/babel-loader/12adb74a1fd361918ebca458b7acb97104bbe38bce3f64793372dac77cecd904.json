{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dev\\\\Desktop\\\\Pokedex\\\\src\\\\components\\\\Favourites.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getFromIndexedDB, getPokemon } from '../indexedDB'; // Assuming indexedDB.js is in the same directory\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Favourites = () => {\n  _s();\n  const [favouritePokemonList, setFavouritePokemonList] = useState([]);\n  useEffect(() => {\n    const fetchFavourites = async () => {\n      const favouriteIds = await getFromIndexedDB('favouritePokemonIds'); // Assuming this fetches favourite IDs\n\n      if (favouriteIds) {\n        const pokemonList = await Promise.all(favouriteIds.map(async id => {\n          const pokemon = await getPokemon(parseInt(id)); // Assuming getPokemon fetches from IndexedDB\n          return pokemon;\n        }));\n        setFavouritePokemonList(pokemonList);\n      }\n    };\n    fetchFavourites();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-2 md:grid-cols-4 gap-4\",\n      children: favouritePokemonList.map(pokemon => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/pokemon/${pokemon.id}`,\n        className: \"group bg-white shadow-md rounded p-4 hover:bg-gray-100\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: pokemon.sprites.front_default,\n          alt: pokemon.name,\n          className: \"w-16 h-16 mx-auto mb-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold text-center\",\n          children: pokemon.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, pokemon.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Favourites, \"NBD3JW+eHDSFa91/66+vKgdykTg=\");\n_c = Favourites;\nexport default Favourites;\nvar _c;\n$RefreshReg$(_c, \"Favourites\");","map":{"version":3,"names":["React","useEffect","useState","Link","getFromIndexedDB","getPokemon","jsxDEV","_jsxDEV","Favourites","_s","favouritePokemonList","setFavouritePokemonList","fetchFavourites","favouriteIds","pokemonList","Promise","all","map","id","pokemon","parseInt","className","children","to","src","sprites","front_default","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dev/Desktop/Pokedex/src/components/Favourites.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { getFromIndexedDB, getPokemon } from '../indexedDB'; // Assuming indexedDB.js is in the same directory\r\n\r\nconst Favourites = () => {\r\n  const [favouritePokemonList, setFavouritePokemonList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchFavourites = async () => {\r\n      const favouriteIds = await getFromIndexedDB('favouritePokemonIds'); // Assuming this fetches favourite IDs\r\n\r\n      if (favouriteIds) {\r\n        const pokemonList = await Promise.all(\r\n          favouriteIds.map(async (id) => {\r\n            const pokemon = await getPokemon(parseInt(id)); // Assuming getPokemon fetches from IndexedDB\r\n            return pokemon;\r\n          })\r\n        );\r\n        setFavouritePokemonList(pokemonList);\r\n      }\r\n    };\r\n    fetchFavourites();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4\">\r\n      {/* Search and error handling sections (you can implement these) */}\r\n      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n        {favouritePokemonList.map(pokemon => (\r\n          <Link key={pokemon.id} to={`/pokemon/${pokemon.id}`} className=\"group bg-white shadow-md rounded p-4 hover:bg-gray-100\">\r\n            <img src={pokemon.sprites.front_default} alt={pokemon.name} className=\"w-16 h-16 mx-auto mb-2\" />\r\n            <h3 className=\"text-xl font-bold text-center\">{pokemon.name}</h3>\r\n            {/* Add more info like types, stats, etc. */}\r\n          </Link>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Add pagination buttons if needed */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Favourites;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,gBAAgB,EAAEC,UAAU,QAAQ,cAAc,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpED,SAAS,CAAC,MAAM;IACd,MAAMW,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,MAAMC,YAAY,GAAG,MAAMT,gBAAgB,CAAC,qBAAqB,CAAC,CAAC,CAAC;;MAEpE,IAAIS,YAAY,EAAE;QAChB,MAAMC,WAAW,GAAG,MAAMC,OAAO,CAACC,GAAG,CACnCH,YAAY,CAACI,GAAG,CAAC,MAAOC,EAAE,IAAK;UAC7B,MAAMC,OAAO,GAAG,MAAMd,UAAU,CAACe,QAAQ,CAACF,EAAE,CAAC,CAAC,CAAC,CAAC;UAChD,OAAOC,OAAO;QAChB,CAAC,CACH,CAAC;QACDR,uBAAuB,CAACG,WAAW,CAAC;MACtC;IACF,CAAC;IACDF,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKc,SAAS,EAAC,uBAAuB;IAAAC,QAAA,eAEpCf,OAAA;MAAKc,SAAS,EAAC,uCAAuC;MAAAC,QAAA,EACnDZ,oBAAoB,CAACO,GAAG,CAACE,OAAO,iBAC/BZ,OAAA,CAACJ,IAAI;QAAkBoB,EAAE,EAAE,YAAYJ,OAAO,CAACD,EAAE,EAAG;QAACG,SAAS,EAAC,wDAAwD;QAAAC,QAAA,gBACrHf,OAAA;UAAKiB,GAAG,EAAEL,OAAO,CAACM,OAAO,CAACC,aAAc;UAACC,GAAG,EAAER,OAAO,CAACS,IAAK;UAACP,SAAS,EAAC;QAAwB;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACjGzB,OAAA;UAAIc,SAAS,EAAC,+BAA+B;UAAAC,QAAA,EAAEH,OAAO,CAACS;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA,GAFxDb,OAAO,CAACD,EAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIf,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGH,CAAC;AAEV,CAAC;AAACvB,EAAA,CApCID,UAAU;AAAAyB,EAAA,GAAVzB,UAAU;AAsChB,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}